#!/usr/bin/env python

import re
import os
import argparse
import codecs
import reST2Google


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Rewrites python docstring code commenting style from reST to Google')
    parser.add_argument('-f', '--force', action='store_const', const=True, default=False,
                        help='do not ask before overwriting files')
    parser.add_argument('-i', '--input-dir', metavar='DIR', type=str, required=True,
                        help='source code directory')
    parser.add_argument('-o', '--output-dir', metavar='DIR', type=str, required=True,
                        help='directory for the rewritten files')
    parser.add_argument('-e', '--extension', metavar='EXT', type=str, default='py',
                          help='only process files with the given extension')

    args = parser.parse_args()

    print()
    print(args)
    print()

    output_dir = os.path.abspath(os.path.expanduser(args.output_dir))
    input_dir = os.path.abspath(os.path.expanduser(args.input_dir))

    print('output_dir', output_dir)
    print('input_dir', input_dir)
    print()

    if not os.path.isdir(os.path.dirname(output_dir)):
        parser.error('Input dir path is invalid!\n'+output_dir)

    if not os.path.isdir(os.path.dirname(output_dir)):
        parser.error('Output dir path is invalid!\n'+output_dir)

    if os.path.exists(output_dir):
        if not os.path.isdir(output_dir):
            parser.error('Output dir path is not a directory!\n'+output_dir)
    else:
        os.mkdir(output_dir)

